{
    "info": {
        "_postman_id": "fd969bdf-68ce-449e-b143-e83392158560",
		    "name": "MonolithToMicroservicesExample",
	    	"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
	     	"_exporter_id": "28585041"
    },
    "item": [
		{
			"name": "Obtener productos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test('Response time is less than 500ms', function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test('Content type is application/json', function () {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
							"});",
							"",
							"pm.test('Validate the response schema for id, name, stock, and description fields', function () {",
							"  const responseData = pm.response.json();",
							"  pm.expect(responseData).to.be.an('array').that.is.not.empty;",
							"  responseData.forEach(function(product) {",
							"  pm.expect(product).to.have.property('id').that.is.a('string');",
							"  pm.expect(product).to.have.property('name').that.is.a('string');",
							"  pm.expect(product).to.have.property('stock').that.is.a('number');",
							"  pm.expect(product).to.have.property('description').that.is.a('string');",
							"});",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Obtener un producto",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/products/123",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"123"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('Response status code is 200', function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"pm.test('Response time is less than 500ms', function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test('Stock is a non-negative integer', function () {",
							"  const responseData = pm.response.json();",
							"  pm.expect(responseData.stock).to.be.an('number');",
							"  pm.expect(responseData.stock).to.be.at.least(0, 'Stock should be a non-negative integer');",
							"});",
							"pm.test('Id is a non-empty string', function () {",
							"  const responseData = pm.response.json();",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, 'Id should be a non-empty string');",
							"});",
							"",
							"pm.test('Response has the required fields - status and id', function () {",
							"  const responseData = pm.response.json();",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.exist;",
							"  pm.expect(responseData.name).to.exist;",
							"  pm.expect(responseData.stock).to.exist;",
							"  pm.expect(responseData.description).to.exist;",
							"});"
						]
					}
				}
			]
		}
    ]
}
