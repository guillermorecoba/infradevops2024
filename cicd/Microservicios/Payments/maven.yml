name: Java CI with Maven
 
on:
  push:
    branches: [ "main", "staging", "develop"]
  workflow_dispatch:

jobs:
  TESTSONARCLOUD:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v3.1.0 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  BUILD:
    runs-on: ubuntu-latest
    needs: TESTSONARCLOUD  
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Build and Push Docker ImageÂ 
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/payments-service-${{steps.extract_branch.outputs.branch}}:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/payments-service-${{steps.extract_branch.outputs.branch}}:latest

  test-api:
          runs-on: ubuntu-latest
          needs: BUILD
          steps:
            - name: Checkout code
              uses: actions/checkout@v3
      
            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '16'
            - name: Install Newman
              run: npm install -g newman
            - name: Extract branch name
              shell: bash
              run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
              id: extract_branch
            - name: Set BASE_URL based on branch
              id: base_url
              run: |
                if [ "${{ steps.extract_branch.outputs.branch }}" == "main" ]; then
                  echo "BASE_URL=${{ vars.MAIN_URL }}" >> $GITHUB_OUTPUT
                elif [ "${{ steps.extract_branch.outputs.branch }}" == "develop" ]; then
                  echo "BASE_URL=${{ vars.DEVELOP_URL }}" >> $GITHUB_OUTPUT
                elif [ "${{ steps.extract_branch.outputs.branch }}" == "staging" ]; then
                  echo "BASE_URL=${{ vars.STAGING_URL }}" >> $GITHUB_OUTPUT
                fi
            - name: Run Postman tests
              env:
                BASE_URL: ${{ steps.base_url.outputs.BASE_URL }}
              run: newman run postman-collection.json --env-var baseUrl=$BASE_URL 
